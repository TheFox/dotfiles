#!/usr/bin/env bash

# Search for '#RN' (Release Note) in commit messages
# between tags and write the output to CHANGELOG-x.txt.


set -e

tags_count=$(git tag 2> /dev/null | wc -l | awk '{ print $1}')
echo "tags: $tags_count"

tag_range_begin=${1:-}
tag_range_end=${2:-}

if [[ $tags_count -eq 0 ]]; then
	echo
	echo 'WARNING: no tags found'
	exit 1
elif [[ $tags_count -eq 1 ]]; then
	tag_range_end=$(git tag)
elif [[ "$tag_range_begin" = "" ]] && [[ "$tag_range_end" = "" ]]; then
	tag_range_begin=$(git tag | tr -d 'v' | tr '.' ' ' | awk '{ printf "%03d.%03d.%03d v%s.%s.%s\n", $1, $2, $3, $1, $2, $3 }' | sort -n | awk '{ print $2 }' | tail -2 | head -1)
	tag_range_end=$(git tag | tr -d 'v' | tr '.' ' ' | awk '{ printf "%03d.%03d.%03d v%s.%s.%s\n", $1, $2, $3, $1, $2, $3 }' | sort -n | awk '{ print $2 }' | tail -1)
elif [[ "$tag_range_begin" != "" ]] && [[ "$tag_range_end" = "" ]]; then
	tag_range_end="HEAD"
fi

date_range_begin=""
if [[ "$tag_range_begin" = "" ]]; then
	#tag_range_begin=$(git log --pretty=%H --reverse | head -1)
	date_range_begin=$(git log --pretty=%cd --reverse | head -1)
else
	date_range_begin=$(git log -n 1 --pretty=%cd --reverse $tag_range_begin)
fi

date_range_end=$(git log -n 1 --pretty=%cd $tag_range_end)

tag_range_total=""
if [[ "$tag_range_begin" = "" ]]; then
	tag_range_total="$tag_range_end"
else
	tag_range_total="$tag_range_begin..$tag_range_end"
fi

printf "tag begin: %8s    %s\n" "$tag_range_begin" "$date_range_begin"
printf "tag end:   %8s    %s\n" "$tag_range_end" "$date_range_end"
echo "tag range: '$tag_range_total'"
# exit

version=$(echo "$tag_range_end" | sed 's/v//')
dst="CHANGELOG-$tag_range_end.txt"

commits_count=$(git log --pretty='- %s' --grep='#RN' $tag_range_total | wc -l | awk '{ print $1}')
echo "commits: $commits_count"
echo

if [[ $commits_count -gt 0 ]]; then
	if [[ ! -f $dst ]]; then
		touch $dst
		
		date +"%Y-%m-%d %H:%M:%S %Z" >> $dst
		echo >> $dst
		
		echo "Version $version" >> $dst
		echo >> $dst
		
		if [[ "$tag_range_begin" != "" ]]; then
			echo "Changes since $tag_range_begin" | tee -a $dst
		fi
		
		git log --pretty='- %s' --grep='#RN' -i --reverse $tag_range_total | sed 's/ #[Rr][Nn]//' | tee -a $dst
		
		echo
		echo "new file: $dst"
	else
		echo "FATAL ERROR: file '$dst' already exist"
		exit 1
	fi
else
	echo 'WARNING: no commits found'
	exit 1
fi
